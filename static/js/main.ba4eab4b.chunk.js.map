{"version":3,"sources":["SearchBar.js","UserList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","data","updateVisUsers","useState","searchText","setSearchText","Fragment","className","id","onClick","window","location","href","icon","faHome","type","value","placeholder","aria-label","aria-describedby","onChange","e","target","searchStr","searchResults","filter","item","pattern","re","RegExp","name","last","match","onSearch","singleUser","UserList","users","setUsers","visUsers","setVisUsers","React","isOpen","setIsOpen","hideModal","getUsers","a","fetch","response","json","usersJSON","results","useEffect","Modal","show","onHide","Header","Title","src","image","faEnvelope","email","faPhone","phone","faMobile","cell","faAddressCard","streetAddress","cityState","Footer","class","scope","faArrowAltCircleUp","userObj","newList","sort","b","sortNamesAscending","faArrowAltCircleDown","sortNamesDescending","map","user","console","log","showModal","picture","large","first","street","number","city","state","country","thumbnail","alt","login","uuid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4eab4b.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {faHome} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SearchBar = ({data,updateVisUsers}) =>{\nconst [searchText,setSearchText] =useState('');\n\n\nconst onSearch = (searchStr)=>{\n  const searchResults = data.filter((item)=>{\n    const pattern = `^${searchStr}`\n    const re = new RegExp(pattern,'gi')\n    return item.name.last.match(re)\n  })\n updateVisUsers(searchResults)\n}\n\nreturn (\n<React.Fragment>\n<div className=\"input-group mb-1 mt-3\">\n  <div className=\"input-group-prepend\">\n    <span className=\"input-group-text\" id=\"basic-addon1\" onClick={()=>{window.location.href='/hw19-user-directory'}}><FontAwesomeIcon icon={faHome}/></span>\n  </div>\n  <input type=\"text\" value={searchText} \n  className=\"form-control\" placeholder=\"Seach by lastname\" \n  aria-label=\"Search\" \n  aria-describedby=\"search-box\"\n  onChange={(e)=>{\n    setSearchText(e.target.value)\n    onSearch(e.target.value)\n  }}/>\n</div>\n</React.Fragment>\n\n)\n}\n\nexport default SearchBar","import React, {useState,useEffect} from 'react'\nimport Modal from \"react-bootstrap/Modal\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './UserCard'\nimport SearchBar from './SearchBar';\nimport {faAddressCard, faArrowAltCircleUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {faArrowAltCircleDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {faEnvelope,faPhone,faMobile,faAdressCard} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './style.css'\n\nconst url='https://randomuser.me/api/?results=200&nat=us&seed=userdir'\n\nlet singleUser ={}\n\nconst UserList = () =>{\n// set states\n  const [users,setUsers] = useState([])\n  const [visUsers,setVisUsers] = useState([])\n  // const [showCard,setShowCard] = useState(false)\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  // Modal Functions\n  const showModal = (image,name,streetAddress,cityState,email,phone,cell) => {\n    // name,phone,cell,email,location,picture\n    singleUser={\n      image,\n      name,\n      streetAddress,\n      cityState,\n      email,\n      phone,\n      cell\n    }\n    setIsOpen(true);\n    console.log('---showing----')\n    console.log(singleUser)\n    console.log('---showing----')\n  };\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n\n  const createSingleUser = ()=>{\n\n  }\n// sort by last name A-Z\nconst sortNamesAscending = (userObj)=>{  \nconst newList = [...visUsers].sort((a,b)=> {\n  return a.name.last > b.name.last ? 1: -1\n})\nsetVisUsers(newList)\n  }\n\n// sort by last name Z-A\n  const sortNamesDescending = (userObj)=>{  \n    const newList = [...visUsers].sort((a,b)=> {\n      return b.name.last > a.name.last ? 1: -1\n    })\n    setVisUsers(newList)\n      }\n\n// fetch data from random user api\nconst getUsers = async ()=>{\n  const response = await fetch(url)\n  const usersJSON = await response.json()\n \n  setUsers(usersJSON.results)\n  setVisUsers(usersJSON.results)\n}\n\n\n\n// Use Effect to call the getUsers function \nuseEffect(() => {\n  getUsers();\n  \n},[])\n\n\n\n// RENDER return \n  return (\n    <React.Fragment>\n\n{/* <button onClick={showModal}>Display Modal</button> */}\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n       \n  <Modal.Title className='font-weight-bold'>{singleUser.name}</Modal.Title>\n  <Modal.Title><img src={singleUser.image} className='rounded-circle border border-secondary shadow-lg row-effect'/></Modal.Title>\n        </Modal.Header>\n       \n  <p className='ml-2 mr-2'><FontAwesomeIcon icon={faEnvelope} className='mr-2'/>{singleUser.email}</p>\n  <p className='ml-2 mr-2' className='ml-2'><FontAwesomeIcon icon={faPhone} className='mr-2'/>{singleUser.phone}</p>\n  <p className='ml-2 mr-2'><FontAwesomeIcon icon={faMobile} className='mr-2'/>{singleUser.cell}</p>\n  <p className='ml-2 mr-2 font-weight-light'><FontAwesomeIcon icon={faAddressCard} className='mr-2'/>{singleUser.streetAddress} \n  <p className='ml-4 font-weight-light'>{singleUser.cityState}</p>   </p>\n    \n        <Modal.Footer>\n          <button class=\"btn btn-secondary\" onClick={hideModal}>Close</button>\n        </Modal.Footer>\n      </Modal>\n\n\n  <div className='container'>\n    {/* add search bar component and passing the users and a function for updating the state */}\n  \n  {/* {showCard && <UserCard data={users}/>} */}\n<SearchBar data={users} updateVisUsers={value => setVisUsers(value)}/>\n\n\n{/* setup the table strcuture  */}\n<table className='table table-hover'>\n<thead className='thead-light'>\n  <tr>\n    <th scope='col'></th>\n    <th scope='col'>Name  <FontAwesomeIcon icon={faArrowAltCircleUp} onClick={(e)=>{sortNamesAscending(visUsers)}}/> \n    <FontAwesomeIcon icon={faArrowAltCircleDown} onClick={(e)=>{sortNamesDescending(visUsers)}}/></th>\n    <th scope='col'>Phone</th>\n  </tr>\n</thead>\n<tbody>\n{/* loop over users object array that was returned from the api call  */}\n{visUsers.map((user)=>{\n\n return <tr key={user.login.uuid} className='row-effect' \n  onClick={(e)=>{\n   const image = user.picture.large\n   const name = `${user.name.first} ${user.name.last}`\n   const streetAddress = `${user.location.street.number} ${user.location.street.name}`\n   const cityState = `${user.location.city}, ${user.location.state}, ${user.location.country}`\n   const email = user.email\n   const phone = user.phone\n   const cell = user.cell\n    // showModal(user)\n    showModal(image,name,streetAddress,cityState,email,phone,cell)\n   }}>\n   <td ><img src={user.picture.thumbnail} alt={user.name.last} className='rounded-circle border border-secondary shadow-lg'/></td>\n<td >{user.name.last},{user.name.first}</td>\n<td  className=''>{user.phone}</td>\n </tr>\n})}\n</tbody>\n</table>\n</div>\n    </React.Fragment>\n  )\n}\n\nexport default UserList","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './UserList'\nimport UserList from './UserList';\n\nfunction App() {\n  return (\n    <React.Fragment>\n\n<UserList/>\n\n\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}